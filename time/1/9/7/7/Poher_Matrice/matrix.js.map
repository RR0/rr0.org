{"version":3,"file":"time/1/9/7/7/Poher_Matrice/matrix.js","sources":["time/1/9/7/7/Poher_Matrice/matrix.js"],"names":[],"mappings":"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","sourceRoot":"../../../../../..","sourcesContent":["angular.module('rr0')\n    .service('matrixService', ['$log', '$q', '$rootScope', '$http', function ($log, $q, $rootScope, $http) {\n        'use strict';\n\n        function Question(t, i) {\n            this.title = t;\n            this.choices = {};\n            this.index = i;\n        }\n\n        var self = this;\n\n        function Choice(l, a, knownPhenomenaProbabilities) {\n            this.label = l;\n            this.answerType = a;\n            this.knownPhenomenaProbabilities = knownPhenomenaProbabilities;\n            this.value = false;\n        }\n\n        function loadURL(u) {\n            return $q(function (resolve, reject) {\n                $http({method: 'GET', url: u}).\n                    success(function (labelsData, status, headers, config) {\n                        $log.info(\"Loaded '\" + u + \"'\");\n                        resolve(labelsData);\n                    }).\n                    error(function (data, status, headers, config) {\n                        reject(\"Could not load '\" + u + \"': \" + status);\n                    });\n            });\n        }\n\n        function loadFile(f) {\n            return $q(function (resolve, reject) {\n                var matrixFileReader = new FileReader();\n                matrixFileReader.onloadend = function (e) {\n                    try {\n                        var matrixData = JSON.parse(e.target.result);\n                        resolve(matrixData);\n                    } catch (err) {\n                        reject(err);\n                    }\n                };\n                matrixFileReader.readAsText(f);\n            });\n        }\n\n        function loadLabels(labelsInput) {\n            return typeof labelsInput === 'object' ? loadFile(labelsInput) : loadURL(labelsInput);\n        }\n\n        function loadMatrixData(matrixData, labelsInput) {\n            loadLabels(labelsInput).then(function (messages) {\n                msg = messages;\n                var i = 0;\n                var questions = self.questions = {};\n                for (var d in matrixData) {\n                    if (matrixData.hasOwnProperty(d)) {\n                        var item = matrixData[d];\n                        var dotPos = item.question.indexOf('.');\n                        var questionKey = item.question.substring(0, dotPos);\n                        var choiceKey = item.question.substring(dotPos + 1);\n                        var question = questions[questionKey];\n                        if (!question) {\n                            question = new Question(messages[questionKey], i++);\n                            questions[questionKey] = question;\n                        }\n                        question.choices[choiceKey] = new Choice(messages[item.question], item.answertype, item.knownPhenomenaProbabilities);\n                    }\n                }\n                $rootScope.$broadcast(\"dataLoaded\", questions);\n            }, function (reason) {\n                $log.error(reason);\n                $rootScope.$broadcast(\"dataError\", reason);\n            });\n        }\n\n        var msg;\n        return {\n            load: function (matrixInput, labelsInput) {\n                if (typeof matrixInput === 'object') {\n                    loadFile(matrixInput).then(function (matrixData) {\n                        loadMatrixData(matrixData, labelsInput);\n                    }, function (reason) {\n                        $rootScope.$broadcast(\"dataError\", reason);\n                    });\n                } else {\n                    loadURL(matrixInput).then(function (matrixData) {\n                        loadMatrixData(matrixData, labelsInput);\n                    }, function (reason) {\n                        $rootScope.$broadcast(\"dataError\", reason);\n                    });\n                }\n            },\n            compute: function (probable) {\n                var zerosCount = {};\n                var max = 0;\n                var questions = self.questions;\n                for (var q in questions) {\n                    if (questions.hasOwnProperty(q)) {\n                        var question = questions[q];\n                        for (var c in question.choices) {\n                            if (question.choices.hasOwnProperty(c)) {\n                                var choice = question.choices[c];\n                                if (choice.value !== false) {\n                                    var knownPhenomenaProbabilities = choice.knownPhenomenaProbabilities;\n                                    for (var p in knownPhenomenaProbabilities) {\n                                        if (knownPhenomenaProbabilities.hasOwnProperty(p)) {\n                                            if (!zerosCount[p]) {\n                                                zerosCount[p] = 0;\n                                            }\n                                            if (knownPhenomenaProbabilities[p] === 0) {\n                                                zerosCount[p]++;\n                                                if (zerosCount[p] > max) {\n                                                    max = zerosCount[p];\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                var explanations = [];\n                for (var z in zerosCount) {\n                    if (zerosCount.hasOwnProperty(z)) {\n                        var count = zerosCount[z];\n                        var index = probable ? max - count : count;\n                        var trad = msg[z];\n                        if (explanations[index]) {\n                            explanations[index] += \", \" + trad;\n                        } else {\n                            explanations[index] = trad.charAt(0).toUpperCase() + trad.slice(1);\n                        }\n                    }\n                }\n                var explanationsWithoutHoles = [];\n                for (var i = 0; i < explanations.length; i++) {\n                    if (explanations[i]) {\n                        explanationsWithoutHoles.push(explanations[i]);\n                    }\n                }\n                return explanationsWithoutHoles;\n            }\n        };\n    }]).controller('MatrixFormController', ['$log', '$scope', 'matrixService', function ($log, $scope, matrixService) {\n        'use strict';\n\n        $scope.load = function () {\n            var matrixInput = document.getElementById('matrixFile').files[0] || $scope.matrixURL;\n            var labelsInput = document.getElementById('labelsFile').files[0] || $scope.labelsURL;\n            if (matrixInput && labelsInput) {\n                $scope.questions = [];\n                matrixService.load(matrixInput, labelsInput);\n            }\n        };\n\n        $scope.questionIndex = 0;\n\n        $scope.parameterChanged = function () {\n            $scope.questionIndex = $scope.currentQuestion.index;\n            questionChanged();\n        };\n        function questionChanged() {\n            $scope.currentQuestion = $scope.questions[$scope.questionsKeys[$scope.questionIndex]];\n            function Field(type, label) {\n                this.type = type;\n                this.label = label;\n            }\n\n            $scope.fields = {};\n            var choices = $scope.currentQuestion.choices;\n            var keys = Object.keys(choices);\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                $scope.fields[key] = new Field(choices[key].answerType, choices[key].label);\n            }\n        }\n\n        $scope.$on(\"dataError\", function (event, msg) {\n            $log.error(msg);\n            window.alert(msg);\n        });\n\n        $scope.$on(\"dataLoaded\", function (event, questions) {\n            $scope.questions = questions;\n            $scope.questionsKeys = Object.keys(questions);\n            questionChanged();\n        });\n\n        $scope.onPrevious = function () {\n            if ($scope.questionIndex >= 0) {\n                $scope.questionIndex--;\n                questionChanged();\n            }\n        };\n\n        $scope.onNext = function () {\n            if ($scope.questionIndex < $scope.questionsKeys.length) {\n                $scope.questionIndex++;\n                questionChanged();\n            }\n        };\n\n        $scope.resultsType = \"NonProbable\";\n        $scope.compute = function (key) {\n            var changedChoice = $scope.currentQuestion.choices[key];\n            if (changedChoice && changedChoice.answerType === 'radio') {\n                for (var c in $scope.currentQuestion.choices) {\n                    if ($scope.currentQuestion.choices.hasOwnProperty(c)) {\n                        var choice = $scope.currentQuestion.choices[c];\n                        if (choice.answerType === 'radio') {\n                            choice.value = c === key ? key : false;\n                        }\n                    }\n                }\n            }\n            $scope.explanations = matrixService.compute($scope.resultsType === \"NonProbable\");\n        };\n    }]);"]}